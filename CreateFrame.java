
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tommylee
 */
public class CreateFrame extends javax.swing.JDialog {
     DBConnection db;
     String team_name;
     DefaultListModel dm=new DefaultListModel();
     DefaultListModel dmsquad=new DefaultListModel();
     java.util.List<String> listTeam=new ArrayList<String>();
    ArrayList[][] listOfSquad = new ArrayList[100][10];

    /**
     * Creates new form CreateFrame
     */
    public CreateFrame() throws SQLException {
     for(int x=0;x<100;x++)
     {
         listOfSquad[x][0]=new ArrayList<>();
     }
        db=new DBConnection();
        initComponents();
      Teamlist.addListSelectionListener(new ListSelectionListener() {

        
                 @Override
                 public void valueChanged(ListSelectionEvent e) {
                 dmsquad.clear();
        try{

        for(Iterator<PlayerStat> i = listOfSquad[Teamlist.getSelectedIndex()][0].iterator(); i.hasNext(); ){
   PlayerStat temp=i.next();
        System.out.println(temp.getPlayerNum()+"    "+temp.getPlayerName());
        dmsquad.addElement(temp.getPlayerNum()+"    "+temp.getPlayerName());
        }
        }
        catch(Exception a){
            System.out.print(Teamlist.getSelectedIndex());
        }
             //To change body of generated methods, choose Tools | Templates.
                 }
    });
  
     Squad.addListSelectionListener(new ListSelectionListener() {

        
                 @Override
                 public void valueChanged(ListSelectionEvent e) {
                   Squad.getSelectedIndex();
                
                 }
    });
        
    }
    public PlayerStat squad_builder()
    {
              JTextField xField = new JTextField(3);
      JTextField yField = new JTextField(10);
      JCheckBox checkBox=new JCheckBox();
      JPanel myPanel = new JPanel();
      myPanel.add(new JLabel("球員編號:"));
      myPanel.add(xField);// a spacer
      myPanel.add(new JLabel("球員名字:"));
      myPanel.add(yField);
      myPanel.add(Box.createVerticalStrut(15));
      myPanel.add(new JLabel("正選球員:"));
      myPanel.add(checkBox);
      PlayerStat stat;
      int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Please Enter X and Y Values", JOptionPane.OK_CANCEL_OPTION);
      if (result == JOptionPane.OK_OPTION) {
         System.out.println("1st value: " + xField.getText());
         System.out.println("2nd value: " + yField.getText());
         System.out.println("3nd value: " + checkBox.isSelected());
         stat=new PlayerStat(Integer.valueOf(xField.getText()),yField.getText(),checkBox.isSelected(),Teamlist.getSelectedValue());
         
         return stat;
      }
      return null;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Teamlist = new javax.swing.JList<>();
        add_team = new javax.swing.JButton();
        delete_team = new javax.swing.JButton();
        add_squad = new javax.swing.JButton();
        deletePlayer = new javax.swing.JButton();
        season_name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Squad = new javax.swing.JList<>();
        submit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(710, 440));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Teamlist.setToolTipText("create");
        Teamlist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                TeamlistValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(Teamlist);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 169, 300));

        add_team.setText("增加球隊");
        add_team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_teamActionPerformed(evt);
            }
        });
        getContentPane().add(add_team, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 169, -1));

        delete_team.setText("刪除球隊");
        delete_team.setToolTipText("");
        delete_team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_teamActionPerformed(evt);
            }
        });
        getContentPane().add(delete_team, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 169, -1));

        add_squad.setText("增加隊員");
        add_squad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_squadActionPerformed(evt);
            }
        });
        getContentPane().add(add_squad, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 175, -1));

        deletePlayer.setText("刪除球員");
        deletePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePlayerActionPerformed(evt);
            }
        });
        getContentPane().add(deletePlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, 175, -1));

        season_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                season_nameActionPerformed(evt);
            }
        });
        getContentPane().add(season_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 260, 30));

        jLabel1.setText("賽季名稱");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 58, 26));

        jScrollPane1.setViewportView(Squad);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 175, 300));

        submit.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        submit.setText("建立賽季");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        getContentPane().add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, 170, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_squadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_squadActionPerformed
            
           PlayerStat stat=squad_builder();
         Squad.setModel(dmsquad);
        dmsquad.clear();
      listOfSquad[Teamlist.getSelectedIndex()][0].add(stat);
      
        for(Iterator<PlayerStat> i = listOfSquad[Teamlist.getSelectedIndex()][0].iterator(); i.hasNext(); ){
             PlayerStat temp=i.next();
        dmsquad.addElement(temp.getPlayerNum()+"    "+temp.getPlayerName());
        }
 
       
       
    }//GEN-LAST:event_add_squadActionPerformed

    private void season_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_season_nameActionPerformed
        // TODO add your handling code here:
    System.out.print("psdfka");
    }//GEN-LAST:event_season_nameActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        long season_id;
        if(!season_name.getText().isEmpty())
        {
            try {
                season_id  =db.insertSeason(season_name.getText());
                if(season_id!=-1)
                {
                    int counter=0;
                    for(String team:listTeam){
                        long team_id=db.insertTeam(team, season_id);
                        for(Iterator<PlayerStat> i = listOfSquad[counter][0].iterator(); i.hasNext(); ){
                            PlayerStat temp=i.next();
                            db.insertPlayer(temp, team_id);
                        }
                        counter++;
                    }
                    
                }
                basketballmainframe mf=new basketballmainframe();
                mf.setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(CreateFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
       
        
    }//GEN-LAST:event_submitActionPerformed
    private void add_to_team_list(String team_name) {
       Teamlist.setModel(dm);
       dm.addElement(team_name);
       listTeam.add(team_name);
        listOfSquad[dm.getSize()][0].clear();
       System.out.println("spuad:"+listOfSquad[dm.getSize()][0].size());
       
    }
    private void add_teamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_teamActionPerformed
        // TODO add your handling code here:
        team_name=JOptionPane.showInputDialog("請輸入隊名：");
        add_to_team_list(team_name);
        
         
    }//GEN-LAST:event_add_teamActionPerformed
     
    private void deletePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePlayerActionPerformed
        // TODO add your handling code here:
        int selectedIndex = Squad.getSelectedIndex();
       
        if (selectedIndex != -1) {
         dmsquad.remove(selectedIndex);
         listOfSquad[Teamlist.getSelectedIndex()][0].remove(selectedIndex);
    }
    }//GEN-LAST:event_deletePlayerActionPerformed

    private void delete_teamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_teamActionPerformed
        // TODO add your handling code here:
        int selectedIndex=Teamlist.getSelectedIndex();
        int tempsize=dm.getSize();
         System.out.println("index:"+selectedIndex);
         if (selectedIndex != -1) {
         System.out.println("dm:"+dm.getSize());

        listOfSquad[selectedIndex][0].clear();
    
        dm.remove(selectedIndex);
        listTeam.remove(selectedIndex);
        if(selectedIndex!=tempsize-1){
            System.out.println("bobina:"+(tempsize-1)+" "+selectedIndex);
        for(int a=selectedIndex;a<tempsize-1;a++)
        {
            System.out.print("beatservice:"+listOfSquad[a][0].size()+" "+listOfSquad[a+1][0].size());
                 for(Iterator<PlayerStat> i = listOfSquad[a+1][0].iterator(); i.hasNext(); ){
   PlayerStat temp=i.next();
        listOfSquad[a][0].add(temp);
        }
                   System.out.print("beatservice222:"+listOfSquad[a][0].size());
                   listOfSquad[a+1][0].clear();
                
        }
        
        System.out.print("checksum:"+listOfSquad[tempsize-1][0].size());
        
        System.out.print("checksumx:"+listOfSquad[tempsize][0].size());
   
        }
    }
       
    }//GEN-LAST:event_delete_teamActionPerformed

    private void TeamlistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_TeamlistValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_TeamlistValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                   
                try {
                    new CreateFrame().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CreateFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
           
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> Squad;
    private javax.swing.JList<String> Teamlist;
    private javax.swing.JButton add_squad;
    private javax.swing.JButton add_team;
    private javax.swing.JButton deletePlayer;
    private javax.swing.JButton delete_team;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField season_name;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables


}
