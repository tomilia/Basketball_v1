
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tommylee
 */
public class DatabaseFrame extends javax.swing.JFrame {
    DBConnection db;
    Map <Integer,String> listSeason;
    Map<Integer,String> Teamlist;
    int seasonId;
    DefaultComboBoxModel selectionmodel;
    DefaultComboBoxModel playmodel;
    DefaultComboBoxModel teammodel;
    byte[] BOM_UTF8 = { (byte) 0xEF, (byte) 0xBB, (byte) 0xBF };
    List<PlayerStat> playerx=new ArrayList<>();
          String col[] = {"Name","No","PTS", "2 Points FG", "FGA","%","3 Points FG","FGA","%","Free throw FG"
             ,"FGA","%","OR","DR","TR","BS","AS","ST","TO","F","EFF"};
          DefaultTableModel tablemodel = new DefaultTableModel(col, 0){
            boolean[] canEdit = new boolean [] {
                false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false
            };
            
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    
    /**
     * Creates new form DatabaseFrame
     */
    public DatabaseFrame() {
        try {
            this.db = new DBConnection();
        } catch (SQLException ex) {
            Logger.getLogger(DatabaseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
                listSeason=db.selection();
      
         Object[] values = listSeason.values().toArray();
        
     selectionmodel= new DefaultComboBoxModel(values);
 
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        season = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        team = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        seasonstat = new javax.swing.JButton();
        playerStat = new javax.swing.JButton();
        back = new javax.swing.JButton();
        summary = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        season.setModel(selectionmodel);
        season.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seasonActionPerformed(evt);
            }
        });
        try{
            season.setSelectedIndex(0);
            System.out.println("sind:"+season.getSelectedIndex());
        }
        catch(Exception e){}
        getContentPane().add(season, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 281, 30));

        jLabel1.setText("賽季：");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 54, 27));

        team.setModel(teammodel);
        team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamActionPerformed(evt);
            }
        });
        team.setSelectedIndex(0);
        getContentPane().add(team, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 281, -1));

        jLabel2.setText("隊伍：");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 50, 30));

        jTable1.setModel(tablemodel);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 241, 1310, 270));

        seasonstat.setText("匯出賽季數據");
        seasonstat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seasonstatActionPerformed(evt);
            }
        });
        getContentPane().add(seasonstat, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 190, 150, 40));

        playerStat.setText("匯出球員數據");
        playerStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerStatActionPerformed(evt);
            }
        });
        getContentPane().add(playerStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 150, 40));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home-icon-silhouette.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 60, 40));

        summary.setText("賽季總結表");
        summary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryActionPerformed(evt);
            }
        });
        getContentPane().add(summary, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 130, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seasonActionPerformed
        // TODO add your handling code here:
        
               seasonId=db.getSeasonIDbyname(season.getSelectedItem());
               Teamlist=db.getTeamList(seasonId);
              Object[] values= Teamlist.values().toArray();
              teammodel=new DefaultComboBoxModel(values);
              
              team.setModel(teammodel);
              team.setSelectedIndex(0);
    }//GEN-LAST:event_seasonActionPerformed

    private void teamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamActionPerformed
        // TODO add your handling code here:
            jTable1.removeAll();
            tablemodel.setRowCount(0);
        int team_id=db.getteamIDbyname(team.getSelectedItem(),seasonId);
        playerx=db.getPlayer(team.getSelectedItem(),seasonId);
            Object[] values= new Object[playerx.size()];
            for(int a=0;a<playerx.size();a++)
            {
                
                values[a]=playerx.get(a).getPlayerName();
            }
             for(int a=0;a<playerx.size();a++)
            {
            try {
                ResultSet rest= db.getStatByPlayerId(playerx.get(a).getplayerId());
                  int []temp=new int[17];
                  int eff=0; for(int z=0;z<17;z++)temp[z]=0;
                     while(rest.next())
            {
                 
   
                  
            eff=(rest.getInt(1)*2+rest.getInt(3)*3+rest.getInt(5)*1)+rest.getInt(7)+rest.getInt(8)+rest.getInt(11)+rest.getInt(12)+rest.getInt(13)-(rest.getInt(2)-rest.getInt(1))-(rest.getInt(4)-rest.getInt(3))-(rest.getInt(6)-rest.getInt(5))-rest.getInt(14);
                
        temp [0]+= rest.getInt(1)*2+rest.getInt(3)*3+rest.getInt(5)*1;
        temp [1]+= rest.getInt(1);
        temp [2]+= rest.getInt(2);
        //percent 100 2point
        temp [3]+= rest.getInt(3);
        temp [4]+= rest.getInt(4);
        //percent 100 3point
        temp [5]+= rest.getInt(5);
        temp [6]+= rest.getInt(6);
        //free throw
        temp [7]+= rest.getInt(7);
        temp [8]+= rest.getInt(8);
        //robound total
        temp [9]+=rest.getInt(11);
        temp [10]+=rest.getInt(12);
        temp [11]+=rest.getInt(13);
        temp [12]+=rest.getInt(14);
        temp [13]+=rest.getInt(15);
        temp[14]+=rest.getInt(16);
        temp[15]+=+rest.getInt(17);
        temp [16]+=eff;

               
            }
                      double percent2point,percent3point,freethrowpoint;
                   percent2point=(temp[2]==0)?0:((double)temp[1])/(int)temp[2];
                  percent3point=(temp[4]==0)?0:((double)temp[3])/(int)temp[4];
                  freethrowpoint=(temp[6]==0)?0:((double)temp[5])/(int)temp[6];           
          tablemodel.addRow(new Object[]{playerx.get(a).getPlayerName(),playerx.get(a).getPlayerNum(),
                    temp[0],temp[1],temp[2],percent2point*100,
                    temp[3],temp[4],percent3point*100,temp[5],temp[6],freethrowpoint*100,
                    temp[7],temp [8],temp [7]+temp [8],temp [9],temp [10],
                    temp [11],temp [12],temp [13]+temp [14]+temp [15],temp[16]});
                     
                     
            } catch (SQLException ex) {
                Logger.getLogger(DatabaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            }

    }//GEN-LAST:event_teamActionPerformed

    private void seasonstatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seasonstatActionPerformed
        // TODO add your handling code here:
         JFileChooser chooser = new JFileChooser();
            int retrival = chooser.showSaveDialog(null);
                if (retrival == JFileChooser.APPROVE_OPTION) {
                   try{
                       File fp=new File(chooser.getSelectedFile()+".csv");
                        if ( fp.exists() ) {
           String msg = "檔案 \"{0}\" 已存在!\n要進行覆蓋?";
           msg = MessageFormat.format( msg, new Object[] { fp.getName() } );
           String title = chooser.getDialogTitle();
           int option = JOptionPane.showConfirmDialog( this, msg, title, JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE );
           if ( option == JOptionPane.NO_OPTION ) {
           return;
           } // end if
           } // end if
          OutputStreamWriter bw=new OutputStreamWriter(new FileOutputStream(fp), StandardCharsets.UTF_8);
          bw.write('\uFEFF');
          int counter=1;
          Object[]total=new Object[21];
          total[0]="總數,";
       
          bw.write("賽季:,"+season.getSelectedItem().toString()+"\n\n");
              seasonId=db.getSeasonIDbyname(season.getSelectedItem());
        Map<Integer,String> teamlist=db.getTeamList(seasonId);
        for (Map.Entry<Integer, String> t : teamlist.entrySet())
       {
             for(int y=1;y<total.length;y++)total[y]=0;
             bw.write("--"+counter++ +"--"+"\n");
           bw.write("隊伍名稱:,"+t.getValue()+"\n\n");
           for(int b=0;b<col.length;b++)
           bw.write(col[b]+",");
           bw.write("\n\n");
            List<PlayerStat> tem=db.getPlayer(t.getValue(), seasonId);
            for(PlayerStat p:tem)
            {
                
                 Object[] retrieveStat=db.getTotalByPlayerId(p.getplayerId());
                 System.out.println(retrieveStat.length);
               bw.write(retrieveStat[0].toString()+",");
                bw.write(p.getPlayerNum()+",");
               for(int a=1;a<retrieveStat.length;a++)
               {
                if(a==4||a==7||a==10)
                {
                    if((int)retrieveStat[a-1]!=0){
                    String temp=retrieveStat[a-2].toString();
                    
                    double z=Double.parseDouble(temp);
                        System.out.println("counts:"+z+" "+(int)retrieveStat[a-1]);
                    bw.write(((double)z/(int)retrieveStat[a-1])*100+"%"+",");
                    }
                    
                    bw.write("0.00%"+",");
                }
                else
                 bw.write(retrieveStat[a]+",");
                 if(a==4||a==7||a==10)
                 {
                     
                     if((int)total[a-1]!=0){
                            String temp=total[a-2].toString();
                    double z=Double.parseDouble(temp);  
                
                      total[a]=((double)z/(int)total[a-1])*100+"%";
                     }
                     else total[a]="0.00%";
                 }
                 else
                 total[a]=Integer.valueOf(total[a].toString())+Integer.valueOf(retrieveStat[a].toString());
               }
               bw.write("\n");
            }
            
            bw.write("\n");
            for(Object j:total)bw.write(j+",");
            bw.write("\n\n");
       }
        bw.close();
        JOptionPane.showMessageDialog(null,"匯出成功");
        }
        catch(Exception e)
        {
         e.printStackTrace();
        }
    }
    
        
        //seasonId get all teamname?/teamid
        //all teamname get all players ?
        //team id query players id query players stat total ->show individual -> sum them all
        
    }//GEN-LAST:event_seasonstatActionPerformed

    private void playerStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerStatActionPerformed
      /*    if(player.getSelectedIndex()!=-1)
          {
         
            JFileChooser chooser = new JFileChooser();
            int retrival = chooser.showSaveDialog(null);
            if (retrival == JFileChooser.APPROVE_OPTION) {
            try{
               File fp=new File(chooser.getSelectedFile()+".csv");
           
                        if ( fp.exists() ) {
           String msg = "檔案 \"{0}\" 已存在!\n要進行覆蓋?";
           msg = MessageFormat.format( msg, new Object[] { fp.getName() } );
           String title = chooser.getDialogTitle();
           int option = JOptionPane.showConfirmDialog( this, msg, title, JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE );
           if ( option == JOptionPane.NO_OPTION ) {
           return;
           } // end if
           } 
               OutputStreamWriter bw=new OutputStreamWriter(new FileOutputStream(fp), StandardCharsets.UTF_8);
               bw.write('\uFEFF');
               
               // BOM o.write('\uFEFF'); writer = new CsvBeanWriter(o, CsvPreference.EXCEL_NORTH_EUROPE_PREFERENCE);
               bw.write(("Name,:,"+player.getSelectedItem().toString()+"\n"));
               bw.write("號碼,:,"+playerx.get(player.getSelectedIndex()).getPlayerNum()+"\n");
               bw.write("所屬隊伍,:,"+playerx.get(player.getSelectedIndex()).getTeam()+"\n");
               bw.write("賽季,:,"+season.getSelectedItem().toString()+"\n\n");
               for(int i=0;i<col.length;i++)
               {
                   bw.write(col[i]+",");
                   }
               bw.write("\n\n");
               for(int i=0;i<jTable1.getRowCount();i++)
               {
                   for(int j=0;j<jTable1.getColumnCount();j++)
                   {
                       
                 
                       if(jTable1.getModel().getValueAt(i, j).equals(""))
                           bw.write(" ,");
                       else
                       bw.write(jTable1.getModel().getValueAt(i, j)+",");
                   }
                   System.out.print("\n");
                   bw.write("\n");
               }
               bw.close();
     
               JOptionPane.showMessageDialog(null,"匯出成功");
           }
          
           catch(Exception e)
           {
              e.printStackTrace();
           }
            }
          }
        */
    }//GEN-LAST:event_playerStatActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        try {
            // TODO add your handling code here:
            basketballmainframe mf=new basketballmainframe();
            this.setVisible(false);
            mf.setVisible(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(DatabaseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_backActionPerformed

    private void summaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_summaryActionPerformed
    private void calculateTotal()
    {
        int []temp=new int[17];
        for(int a=0;a<17;a++)temp[a]=0;
            for(int i = 0; i < jTable1.getRowCount(); i++){
                
        temp [0]+= Integer.parseInt( jTable1.getValueAt(i, 2)+"");
        temp [1]+= Integer.parseInt( jTable1.getValueAt(i, 3)+"");
        temp [2]+= Integer.parseInt( jTable1.getValueAt(i, 4)+"");
        temp [3]+= Integer.parseInt( jTable1.getValueAt(i, 6)+"");
        temp [4]+= Integer.parseInt( jTable1.getValueAt(i, 7)+"");
        temp [5]+= Integer.parseInt( jTable1.getValueAt(i, 9)+"");
        temp [6]+= Integer.parseInt( jTable1.getValueAt(i, 10)+"");
        temp [7]+= Integer.parseInt( jTable1.getValueAt(i, 12)+"");
        temp [8]+= Integer.parseInt( jTable1.getValueAt(i, 13)+"");
        temp [9]+=Integer.parseInt( jTable1.getValueAt(i, 14)+"");
        temp [10]+=Integer.parseInt( jTable1.getValueAt(i, 15)+"");
        temp [11]+=Integer.parseInt( jTable1.getValueAt(i, 16)+"");
        temp [12]+=Integer.parseInt( jTable1.getValueAt(i, 17)+"");
        temp [13]+=Integer.parseInt( jTable1.getValueAt(i, 18)+"");
        temp [14]+=Integer.parseInt( jTable1.getValueAt(i, 19)+"");


    }
                   double percent2point,percent3point,freethrowpoint;
                  int eff=(temp[0])+temp[9]+temp[10]+temp[11]+temp[12]-(temp[2]-temp[1])-(temp[4]-temp[3])-(temp[6]-temp[5])-temp[13];
   
                  percent2point=(temp[2]==0)?0:((double)temp[1])/(int)temp[2];
                  percent3point=(temp[4]==0)?0:((double)temp[3])/(int)temp[4];
                  freethrowpoint=(temp[6]==0)?0:((double)temp[5])/(int)temp[6];
              /* 
   0 int twopointin=0;
   1 int twopointshoottime=0;
   2 int threepointin=0;
   3 int threepointshoottime=0;
   4 int freepointin=0;
   5 int freepointshoottime=0*;
   6 int attackbasket=0;
   7 int deferencebasket=0;
   8 int fastattacksuccess=0;
   9 int fastattackfailure=0;  
  10 int blockshot=0;
  11 int assist=0;
  12 int steal=0;
  13 int turnover=0;
  14 int atkfoul=0;
  15 int deffoul=0;
  16 int techfoul=0;
  17 int totalscore=0;
*/
     tablemodel.insertRow(0,new Object[]{"Total","",temp[0],temp[1],temp[2],100*percent2point,temp[3],temp[4],100*percent3point,
     temp[5],temp[6],100*freethrowpoint,temp[7],temp[8],temp[9],temp[10],temp[11],temp[12],temp[13],temp[14],eff});       
     
    }
    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton playerStat;
    private javax.swing.JComboBox<String> season;
    private javax.swing.JButton seasonstat;
    private javax.swing.JButton summary;
    private javax.swing.JComboBox<String> team;
    // End of variables declaration//GEN-END:variables
}
