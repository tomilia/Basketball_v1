
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tommylee
 */
public class ModifyFrame extends javax.swing.JDialog {
int seasonId;
DBConnection db;
Map<Integer,String> teamList=new HashMap<>();
   DefaultListModel dmsquad=new DefaultListModel();
DefaultListModel teamModel=new DefaultListModel();;
     java.util.List<String> listTeam=new ArrayList<String>();
    ArrayList[][] listOfSquad = new ArrayList[100][10];
    ArrayList<String> Querylist=new ArrayList<>();
    PlayerStat playercurrentpoint;

JTextField t1=new JTextField();
        final JComponent[] inputs = new JComponent[] {
        new JLabel("更改球員名字"),
        t1
};
    /**
     * Creates new form ModifyFrame
     */
    public ModifyFrame(int seasonId) {
    this.seasonId=seasonId;
     for(int x=0;x<100;x++)
     {
         listOfSquad[x][0]=new ArrayList<>();
     }
    try {
        db=new DBConnection();
    } catch (SQLException ex) {
        Logger.getLogger(ModifyFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        initComponents();
        initteam();
        initplayer();
    Squad.addListSelectionListener(new ListSelectionListener() {

        
                 @Override
                 public void valueChanged(ListSelectionEvent e) {
                 try{
                  playercurrentpoint=(PlayerStat)listOfSquad[Teamlist.getSelectedIndex()][0].get(Squad.getSelectedIndex());
                 }
                 catch(Exception x){
                    
                 } 
              
    }});
    Teamlist.addListSelectionListener(new ListSelectionListener() {

        
                 @Override
                 public void valueChanged(ListSelectionEvent e) {
                     refreshSquad();
             //To change body of generated methods, choose Tools | Templates.
                 }
    });
    }
    public PlayerStat squad_builder()
    {
              JTextField xField = new JTextField(3);
      JTextField yField = new JTextField(10);
      JCheckBox checkBox=new JCheckBox();
      JPanel myPanel = new JPanel();
      myPanel.add(new JLabel("球員編號:"));
      myPanel.add(xField);// a spacer
      myPanel.add(new JLabel("球員名字:"));
      myPanel.add(yField);
      myPanel.add(Box.createVerticalStrut(15));
      myPanel.add(new JLabel("正選球員:"));
      myPanel.add(checkBox);
      PlayerStat stat;
      int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Please Enter X and Y Values", JOptionPane.OK_CANCEL_OPTION);
      if (result == JOptionPane.OK_OPTION) {
         System.out.println("1st value: " + xField.getText());
         System.out.println("2nd value: " + yField.getText());
         System.out.println("3nd value: " + checkBox.isSelected());
         stat=new PlayerStat(Integer.valueOf(xField.getText()),yField.getText(),checkBox.isSelected(),Teamlist.getSelectedValue());
         
         return stat;
      }
      return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add_team = new javax.swing.JButton();
        delete_team = new javax.swing.JButton();
        add_squad = new javax.swing.JButton();
        deletePlayer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Squad = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        Teamlist = new javax.swing.JList<>();
        submit = new javax.swing.JButton();
        changeNum = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        add_team.setText("增加球隊");
        add_team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_teamActionPerformed(evt);
            }
        });

        delete_team.setText("刪除球隊");
        delete_team.setToolTipText("");
        delete_team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_teamActionPerformed(evt);
            }
        });

        add_squad.setText("增加隊員");
        add_squad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_squadActionPerformed(evt);
            }
        });

        deletePlayer.setText("刪除球員");
        deletePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePlayerActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(Squad);

        Teamlist.setModel(teamModel);
        Teamlist.setToolTipText("create");
        Teamlist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                TeamlistValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(Teamlist);

        submit.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        submit.setText("完成編輯");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        changeNum.setText("更改球員號碼");
        changeNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeNumActionPerformed(evt);
            }
        });

        jButton2.setText("更改球員名稱");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_team, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_team, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(add_squad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deletePlayer, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(changeNum)
                            .addComponent(jButton2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(changeNum)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(207, 207, 207)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_team)
                    .addComponent(add_squad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_team)
                    .addComponent(deletePlayer))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TeamlistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_TeamlistValueChanged
        // TODO add your handling code here:
      
       
    }//GEN-LAST:event_TeamlistValueChanged
   private void refreshSquad(){
       try{
                    
                   dmsquad.clear();
        try{

        for(Iterator<PlayerStat> i = listOfSquad[Teamlist.getSelectedIndex()][0].iterator(); i.hasNext(); ){
   PlayerStat temp=i.next();
        System.out.println(temp.getPlayerNum()+"    "+temp.getPlayerName());
       
             dmsquad.addElement(temp.getPlayerNum()+"    "+temp.getPlayerName());
        }
        }
        catch(Exception a){
           a.printStackTrace();
        }
                     
                    
       
                     }
                     catch(Exception x)
            {
                dmsquad.clear();
            }
                      Squad.setModel(dmsquad);
             //To change body of generated methods, choose Tools | Templates.
                 
   }
    
    private void add_to_team_list(String team_name) {
  
       teamModel.addElement(team_name);
       listTeam.add(team_name);
         Querylist.add("insert into TEAM (TEAM_NAME,SEASON_ID) values ('"+team_name+"',"+seasonId+")");
      
    }
    private void add_teamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_teamActionPerformed
        // TODO add your handling code here:
               String  team_name=JOptionPane.showInputDialog("請輸入隊名：");
        add_to_team_list(team_name);
      
    }//GEN-LAST:event_add_teamActionPerformed

    private void add_squadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_squadActionPerformed
        // TODO add your handling code here:
        
 
                 PlayerStat stat=squad_builder();
         Squad.setModel(dmsquad);
        dmsquad.clear();
      listOfSquad[Teamlist.getSelectedIndex()][0].add(stat);
      long team_id=db.getteamIDbyname(Teamlist.getSelectedValue(), seasonId);
        for(Iterator<PlayerStat> i = listOfSquad[Teamlist.getSelectedIndex()][0].iterator(); i.hasNext(); ){
             PlayerStat temp=i.next();
        dmsquad.addElement(temp.getPlayerNum()+"    "+temp.getPlayerName());
        
        }
        Querylist.add("insert into PLAYERS (PLAYER_NAME,PLAYER_NUM,PLAYER_FIRST_TEAM,TEAM_ID) values "+"('"+stat.getPlayerName()+"',"+stat.getPlayerNum()+","+stat.getFirstTeam()+","+team_id+")");
    }//GEN-LAST:event_add_squadActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
    try {
        // TODO add your handling code here:
        //original list team + original list player
        //compare position and name of origin and new
        
        db.execQ(Querylist);
        basketballmainframe mf=new basketballmainframe();
        mf.setVisible(true);
        this.dispose();
    } catch (SQLException ex) {
        Logger.getLogger(ModifyFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_submitActionPerformed

    private void delete_teamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_teamActionPerformed
        // TODO add your handling code here:
              listTeam.remove(Teamlist.getSelectedIndex());
       teamModel.remove(Teamlist.getSelectedIndex());
       Querylist.add("DELETE FROM STAT WHERE STAT.PLAYER_ID IN( SELECT STAT.PLAYER_ID FROM STAT JOIN PLAYERS ON STAT.PLAYER_ID=PLAYERS.PLAYER_ID WHERE TEAM_ID IN(SELECT PLAYERS.TEAM_ID FROM PLAYERS JOIN TEAM ON PLAYERS.TEAM_ID=TEAM.TEAM_ID WHERE SEASON_ID IN(SELECT TEAM.SEASON_ID FROM TEAM JOIN SEASON ON SEASON.SEASON_ID=TEAM.SEASON_ID WHERE SEASON.SEASON_ID="+seasonId+")))");
       Querylist.add("DELETE FROM PLAYERS WHERE PLAYERS.TEAM_ID IN( SELECT PLAYERS.TEAM_ID FROM PLAYERS JOIN TEAM ON PLAYERS.TEAM_ID=TEAM.TEAM_ID WHERE SEASON_ID IN(SELECT TEAM.SEASON_ID FROM TEAM JOIN SEASON ON TEAM.SEASON_ID=SEASON.SEASON_ID WHERE SEASON.SEASON_ID="+seasonId+"))");
       Querylist.add("DELETE FROM TEAM WHERE TEAM.SEASON_ID="+seasonId+" ");
    }//GEN-LAST:event_delete_teamActionPerformed

    private void deletePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePlayerActionPerformed
        // TODO add your handling code here:
                playercurrentpoint=(PlayerStat)listOfSquad[Teamlist.getSelectedIndex()][0].get(Squad.getSelectedIndex());
        
        listOfSquad[Teamlist.getSelectedIndex()][0].remove(Squad.getSelectedIndex());
        dmsquad.remove(Squad.getSelectedIndex());
               Querylist.add("DELETE FROM STAT WHERE STAT.PLAYER_ID ="+playercurrentpoint.getplayerId());
       Querylist.add("DELETE FROM PLAYERS WHERE PLAYERS.PLAYER_ID="+playercurrentpoint.getplayerId());
    }//GEN-LAST:event_deletePlayerActionPerformed

    private void changeNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeNumActionPerformed
        // TODO add your handling code here:
     
        playercurrentpoint=(PlayerStat)listOfSquad[Teamlist.getSelectedIndex()][0].get(Squad.getSelectedIndex());
        System.out.println("tmpx:"+playercurrentpoint.getPlayerNum());
     int tmp=playercurrentpoint.getPlayerNum();
   t1.setText(String.valueOf(tmp));
        int result = JOptionPane.showConfirmDialog(null, inputs, "更改球員號碼", JOptionPane.YES_NO_OPTION);
   
if (result == JOptionPane.OK_OPTION) {
  if(!t1.getText().equals(String.valueOf(tmp)))
  {
      System.out.println("tmp:"+tmp);
      int tx=Integer.valueOf(t1.getText());
      playercurrentpoint.setPlayerNum(tx);
      Querylist.add("UPDATE PLAYERS SET PLAYER_NUM="+tx+" WHERE PLAYER_ID="+playercurrentpoint.getplayerId());
      
  }
} else {
    System.out.println("User canceled / closed the dialog, result = " + result);
}
refreshSquad();
    }//GEN-LAST:event_changeNumActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
           // TODO add your handling code here:
     
        playercurrentpoint=(PlayerStat)listOfSquad[Teamlist.getSelectedIndex()][0].get(Squad.getSelectedIndex());
        System.out.println("tmpx:"+playercurrentpoint.getPlayerName());
     String tmp=playercurrentpoint.getPlayerName();
   t1.setText(String.valueOf(tmp));
        int result = JOptionPane.showConfirmDialog(null, inputs, "更改球員名字", JOptionPane.YES_NO_OPTION);
   
if (result == JOptionPane.OK_OPTION) {
  if(!t1.getText().equals(tmp))
  {
      System.out.println("tmp:"+tmp);
      String tx=t1.getText();
      playercurrentpoint.setPlayerName(tx);
      Querylist.add("UPDATE PLAYERS SET PLAYER_NAME='"+tx+"' WHERE PLAYER_ID="+playercurrentpoint.getplayerId());
      
  }
} else {
    System.out.println("User canceled / closed the dialog, result = " + result);
}
refreshSquad();
    }//GEN-LAST:event_jButton2ActionPerformed
 
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> Squad;
    private javax.swing.JList<String> Teamlist;
    private javax.swing.JButton add_squad;
    private javax.swing.JButton add_team;
    private javax.swing.JButton changeNum;
    private javax.swing.JButton deletePlayer;
    private javax.swing.JButton delete_team;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables

    private void initteam() {
       teamList=db.getTeamList(seasonId);
       Object[] tempteam=teamList.values().toArray();
       for(int a=0;a<teamList.size();a++)
       {
           listTeam.add((String)tempteam[a]);
       teamModel.addElement(tempteam[a]);
       }
     //To change body of generated methods, choose Tools | Templates.
    }

    private void initplayer() {
         Object[] tempteam=teamList.values().toArray();
        for(int x=0;x<teamList.size();x++){
        List<PlayerStat> tempplayerlist=db.getPlayer(tempteam[x], seasonId);
        
            for(PlayerStat tempplayer:tempplayerlist )
    {
        
           listOfSquad[x][0].add(tempplayer);
           
    }
        }

      //To change body of generated methods, choose Tools | Templates.
    }
}
